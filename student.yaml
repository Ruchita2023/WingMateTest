openapi: 3.0.3
info:
  title: Swagger Student Management System - OpenAPI 3.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
# - url: https://petstore3.swagger.io/api/v3
- url: /api/v3
tags:
- name: student
  description: Operations about student
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: course
  description: Operations about course
paths:
  /student:
    get:
      tags:
      - student
      summary: Get list of all students
      description: Returns list of students
      operationId: get_Student_lisT
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
                x-content-type: application/json
        "400":
          description: Invalid ID supplied
        "404":
          description: Student not found
      x-accepts: application/json
      x-tags:
      - tag: student
      x-openapi-router-controller: swagger_server.controllers.student_controller
    
    post:
      tags:
      - student
      summary: Add a new student
      description: Add a new student
      operationId: add_student
      requestBody:
        description: Create a new student
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        "405":
          description: Invalid input
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: student
      x-openapi-router-controller: swagger_server.controllers.student_controller
  /student/{studentId}:
    get:
      tags:
      - student
      summary: Find student by ID
      description: Returns a single student
      operationId: get_student
      parameters:
      - name: studentId
        in: path
        description: ID of student to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "400":
          description: Invalid ID supplied
        "404":
          description: Student not found
      x-accepts: application/json
      x-tags:
      - tag: student
      x-openapi-router-controller: swagger_server.controllers.student_controller
    put:
      tags:
      - student
      summary: Update an existing student
      description: Update an existing student by Id
      operationId: update_student
      parameters:
      - name: studentId
        in: path
        description: Student id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update an existent student
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "400":
          description: Invalid ID supplied
        "404":
          description: Student not found
        "405":
          description: Validation exception
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: student
      x-openapi-router-controller: swagger_server.controllers.student_controller
    delete:
      tags:
      - student
      summary: Deletes a student
      description: delete a student
      operationId: delete_student
      parameters:
      - name: studentId
        in: path
        description: Student id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "400":
          description: Invalid student value
      x-accepts: application/json
      x-tags:
      - tag: student
      x-openapi-router-controller: swagger_server.controllers.student_controller
  /course:
    get:
      tags:
      - course
      summary: Get list of all courses
      description: Returns list of courses
      operationId: get_course_list
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
                x-content-type: application/json
        "400":
          description: Invalid ID supplied
        "404":
          description: Course not found
      x-accepts: application/json
      x-tags:
      - tag: course
      x-openapi-router-controller: swagger_server.controllers.course_controller

    post:
      tags:
      - course
      summary: Add a new course
      description: Add a new course
      operationId: add_course
      requestBody:
        description: Create a new course
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        "405":
          description: Invalid input
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: course
      x-openapi-router-controller: swagger_server.controllers.course_controller
  /course/{courseId}:
    get:
      tags:
      - course
      summary: Find course by ID
      description: Returns a single course
      operationId: get_course
      parameters:
      - name: courseId
        in: path
        description: ID of course to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        "400":
          description: Invalid ID supplied
        "404":
          description: Course not found
      x-accepts: application/json
      x-tags:
      - tag: course
      x-openapi-router-controller: swagger_server.controllers.course_controller
    put:
      tags:
      - course
      summary: Update an existing course
      description: Update an existing course by Id
      operationId: update_course
      parameters:
      - name: courseId
        in: path
        description: Course id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Update an existent course
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        "400":
          description: Invalid ID supplied
        "404":
          description: Course not found
        "405":
          description: Validation exception
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: course
      x-openapi-router-controller: swagger_server.controllers.course_controller
    delete:
      tags:
      - course
      summary: Deletes a course
      description: delete a course
      operationId: delete_course
      parameters:
      - name: courseId
        in: path
        description: Course id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        "400":
          description: Invalid course value
      x-accepts: application/json
      x-tags:
      - tag: course
      x-openapi-router-controller: swagger_server.controllers.course_controller
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Ramesh
        address:
          type: string
          format: int64
          example: Pune
        email:
          type: string
          example: ramesh@email.com
        phone:
          type: string
          example: "1234567890"
      example:
        address: Pune
        phone: "1234567890"
        name: Ramesh
        id: 1
        email: ramesh@email.com
      xml:
        name: student
    Course:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
        desc:
          type: string
      example:
        name: name
        id: 1
        desc: desc
      xml:
        name: course
  requestBodies:
    Employee:
      description: Student object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Student'
    Department:
      description: Course object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Course'

