/*
Swagger Student Management System - OpenAPI 3.0

Testing StudentApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "//"
)

func Test_openapi_StudentApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test StudentApiService AddStudent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.StudentApi.AddStudent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudentApiService DeleteStudent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var studentId int64

		resp, httpRes, err := apiClient.StudentApi.DeleteStudent(context.Background(), studentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudentApiService GetStudent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var studentId int64

		resp, httpRes, err := apiClient.StudentApi.GetStudent(context.Background(), studentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudentApiService GetStudentLisT", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.StudentApi.GetStudentLisT(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StudentApiService UpdateStudent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var studentId int64

		resp, httpRes, err := apiClient.StudentApi.UpdateStudent(context.Background(), studentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
